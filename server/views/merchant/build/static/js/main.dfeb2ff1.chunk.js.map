{"version":3,"sources":["vendor/react-toastify.js","vendor/aos.js","presentations/error/index.js","App.js","reportWebVitals.js","store/history.js","store/reducers/nav.js","store/reducers/blogs.js","store/reducers/programs.js","store/reducers/gallery.js","store/reducers/events.js","store/reducer.js","store/index.js","index.js","assets/logo.png","components/loader/index.js","utils/actionGenerator.js"],"names":["toast","configure","autoClose","Aos","init","NotFound","history","style","height","className","src","Logo","alt","width","color","onClick","goBack","Home","lazy","About","Blog","SingleBlog","Program","Gallery","SingleProgram","Contact","App","fallback","exact","path","component","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReduxHistoryContext","createBrowserHistory","createReduxHistory","routerMiddleware","routerReducer","initialState","brand","nav","key","name","link","state","action","isloading","blogs","single","metaData","index","total","posts","type","types","post","start","complete","payload","res","find","item","_id","error","programs","program","gallery","events","event","createReducer","combineReducers","form","global","contact","router","eventReducer","store","createStore","reducer","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","StrictMode","document","getElementById","Loader","role","createTypes","createAsyncTypes","formatDate","date","moment","format","avatarUrl","data"],"mappings":"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","file":"static/js/main.dfeb2ff1.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure({ autoClose: 8000 });\n","import Aos from 'aos';\nimport 'aos/dist/aos.css';\n\n\n\nAos.init();","import React from 'react';\nimport Logo from '../../assets/logo.png';\n\nconst NotFound = ({ history }) => {\n  return ( \n    <div style={{ height: '100vh' }} className=\"d-flex justify-content-center align-items-center\">\n      <div className=\"text-center\">\n      <img className=\"mx-auto\" src={Logo} alt=\"\" width={\"50%\"} height={\"50%\"} />\n      <p className=\"text-center\">Page not found.</p>\n      <button className=\"btn\" style={{ color: \"rgb(204, 139, 121)\" }} onClick={() => history.goBack()} > go back </button>\n      </div>\n    </div>\n   );\n}\n \nexport default NotFound;","import React, { lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Loader from \"./components/loader\";\nimport \"./vendor\";\n\nimport Error from './presentations/error'\n\nconst Home = lazy(() => import(\"./containers/Home\"));\nconst About = lazy(() => import(\"./containers/About\"));\nconst Blog = lazy(() => import(\"./containers/Blog\"));\nconst SingleBlog = lazy(() => import(\"./containers/Blog/detail\"));\nconst Program = lazy(() => import(\"./containers/Program\"));\nconst Gallery = lazy(() => import('./containers/Gallery'));\nconst SingleProgram = lazy(() => import(\"./containers/Program/detail\"));\nconst Contact = lazy(() => import(\"./containers/Contact\"));\n\n\nfunction App() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/news-detail\" component={SingleBlog} />\n        <Route exact path=\"/program-detail\" component={SingleProgram} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/news\" component={Blog} />\n        <Route exact path='/gallery' component={Gallery} />\n        <Route exact path=\"/programmes\" component={Program} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route render={(props) =><Error {...props} /> } />\n      </Switch>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from \"history\";\nimport { createReduxHistoryContext } from \"redux-first-history\";\n\nconst {\n  createReduxHistory,\n  routerMiddleware,\n  routerReducer,\n} = createReduxHistoryContext({\n  history: createBrowserHistory(),\n  //other options if needed\n});\n\nexport { createReduxHistory, routerMiddleware, routerReducer };\n","\nconst initialState = {\n  brand: \"Cruxcohtech\",\n  nav: [\n    {\n      key: \"1\",\n      name: \"Home\",\n      link: \"/\",\n    },\n    {\n      key: \"2\",\n      name: \"About Us\",\n      link: \"/about\",\n    },\n    {\n      key: \"3\",\n      name: \"Programmes\",\n      link: \"/programmes\",\n    },\n    {\n      key: \"5\",\n      name: \"News\",\n      link: \"/news\",\n    },\n    {\n      key: \"6\",\n      name: \"Gallery\",\n      link: \"/gallery\",\n    },\n    {\n      key: \"7\",\n      name: \"Contact Us\",\n      link: \"/contact\",\n    },\n  ],\n};\n\nconst nav = (state = initialState, action) => {\n  switch (action) {\n    case \"BRAND\":\n      return state.brand;\n    case \"NAV\":\n      return state.nav;\n    default:\n      return state;\n  }\n};\n\nexport default nav;\n","import { types } from \"../../utils/actionGenerator\";\n\nconst initialState = {\n  isloading: false,\n  blogs: [],\n  single: {},\n  metaData: {\n    index: 0,\n    total: 0,\n  },\n};\n\nconst posts = (state = initialState, action) => {\n  switch (action.type) {\n    case types.post.start:\n      return { ...state, isloading: true };\n    case types.post.complete:\n      return {\n        ...state,\n        blogs: action.payload.posts,\n        metaData: action.payload.metaData,\n        isloading: false,\n      };\n    case \"SINGLE-POST\":\n      const res = state.blogs.find((item) => item._id === action.payload);\n      return { ...state, single: res };\n    case types.post.error:\n      return { ...state, isloading: false };\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import { types } from \"../../utils/actionGenerator\";\n\nconst initialState = {\n  isloading: false,\n  programs: [],\n  single: {},\n  metaData: {\n    index: 0,\n    total: 0,\n  },\n};\n\nconst program = (state = initialState, action) => {\n  switch (action.type) {\n    case types.program.start:\n      return { ...state, isloading: true };\n    case types.program.complete:\n      return {\n        ...state,\n        programs: action.payload.programs,\n        metaData: action.payload.metaData,\n        isloading: false,\n      };\n    case \"SINGLE-PROGRAM\":\n      const res = state.programs.find((item) => item._id === action.payload);\n      return { ...state, single: res };\n    case types.program.error:\n      return { ...state, isloading: false };\n    default:\n      return state;\n  }\n};\n\nexport default program;\n","import { types } from \"../../utils/actionGenerator\";\n\nconst initialState = {\n  isloading: false,\n  gallery: [],\n  metaData: {},\n};\n\nconst gallery = (state = initialState, action) => {\n  switch (action.type) {\n    case types.gallery.start:\n      return { ...state, isloading: true };\n    case types.gallery.complete:\n      return {\n        ...state,\n        gallery: action.payload.gallery,\n        metaData: action.payload.metaData,\n        isloading: false,\n      };\n    case types.gallery.error:\n      return { ...state, isloading: false };\n    default:\n      return state;\n  }\n};\n\nexport default gallery;\n","import { types } from '../../utils/actionGenerator.js';\n\nconst initialState = {\n  isloading: false,\n  events: [],\n  metaData: {},\n}\n\nconst event = (state = initialState, action) => {\n  switch(action.type) {\n    case types.events.start:\n      return {...state, isloading: true };\n    case types.events.complete:\n      return {...state, events: action.payload.events, metaData: action.payload.metaData, isloading: false }\n    default:\n      return state;\n  }\n}\n\nexport default event;","import { reducer as form } from \"redux-form\";\nimport { combineReducers } from \"redux\";\nimport { types } from \"../utils/actionGenerator\";\nimport { routerReducer } from \"./history\";\n\nimport nav from \"./reducers/nav\";\nimport blogs from \"./reducers/blogs\";\nimport programs from \"./reducers/programs\";\nimport gallery from './reducers/gallery';\nimport eventReducer from './reducers/events';\n\nconst initialState = {\n  isloading: false,\n};\n\nconst global = (state = initialState, action) => {\n  switch (action.type) {\n    case types.contact.start:\n      return { ...state, isloading: true };\n    case types.contact.complete:\n      return { ...state, isloading: false };\n    case types.contact.error:\n      return { ...state, isloading: false };\n    default:\n      return state;\n  }\n};\n\nconst createReducer = combineReducers({\n  form,\n  global,\n  router: routerReducer,\n  nav,\n  blogs,\n  programs,\n  gallery,\n  eventReducer\n});\n\nexport default createReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { createReduxHistory, routerMiddleware } from './history';\n\nimport reduxThunk from 'redux-thunk';\n\nimport reducer from './reducer';\n\nconst getMiddleware = () => {\n  if(process.env.NODE_ENV === \"production\") {\n    return applyMiddleware(routerMiddleware, reduxThunk)\n  } else {\n    return applyMiddleware(routerMiddleware, reduxThunk, createLogger())\n  }\n}\n\nconst store = createStore(reducer, composeWithDevTools(getMiddleware()));\nconst history = createReduxHistory(store);\n\nexport { store, history }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport SimpleLightBox from 'simple-react-lightbox'\n\nimport { store } from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <SimpleLightBox>\n          <App />\n        </SimpleLightBox>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/logo.5a7365aa.png\";","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div\n      style={{ height: \"100vh\" }}\n      className=\"d-flex w-100 justify-content-center align-items-center\"\n    >\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import moment from \"moment-timezone\";\nimport { createTypes, createAsyncTypes } from \"redux-create-types\";\n\nexport const namespace = \"app\";\nexport const types = createTypes(\n  [\n    \"loader\",\n    \"handleContact\",\n    \"nav\",\n    \"gallery\",\n    \"events\",\n    // this will create types for multiple stages of an async side effect\n    createAsyncTypes(\"contact\"),\n    createAsyncTypes(\"post\"),\n    createAsyncTypes(\"program\"),\n    createAsyncTypes(\"gallery\"),\n  ],\n  // namespace will prefix all our types!\n  namespace\n);\n\nexport const formatDate = (date) => moment(date).format(\"MMM DD, YYYY\");\n\nexport const avatarUrl = data => data"],"sourceRoot":""}